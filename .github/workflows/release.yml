name: Build and Package Extension

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a new release'
        required: false
        default: 'false'

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Get extension version
      id: version
      run: |
        VERSION=$(node -e "console.log(require('./manifest.json').version)")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Extension version: $VERSION"
        
    - name: Create extension package
      run: |
        echo "📦 Creating extension package..."
        
        # Create a clean build directory
        mkdir -p build/ai-text-proofreader-v${{ steps.version.outputs.version }}
        
        # Copy extension files (exclude development files)
        cp -r background build/ai-text-proofreader-v${{ steps.version.outputs.version }}/
        cp -r content build/ai-text-proofreader-v${{ steps.version.outputs.version }}/
        cp -r popup build/ai-text-proofreader-v${{ steps.version.outputs.version }}/
        cp manifest.json build/ai-text-proofreader-v${{ steps.version.outputs.version }}/
        cp README.md build/ai-text-proofreader-v${{ steps.version.outputs.version }}/
        
        # Create zip file for Chrome Web Store
        cd build
        zip -r "ai-text-proofreader-v${{ steps.version.outputs.version }}.zip" "ai-text-proofreader-v${{ steps.version.outputs.version }}/"
        
        echo "✅ Package created: ai-text-proofreader-v${{ steps.version.outputs.version }}.zip"
        
    - name: Generate checksums
      run: |
        cd build
        sha256sum "ai-text-proofreader-v${{ steps.version.outputs.version }}.zip" > checksums.txt
        echo "📄 Checksums generated"
        cat checksums.txt
        
    - name: Upload package as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ai-text-proofreader-v${{ steps.version.outputs.version }}
        path: |
          build/ai-text-proofreader-v${{ steps.version.outputs.version }}.zip
          build/checksums.txt
          
    - name: Upload to release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/ai-text-proofreader-v${{ steps.version.outputs.version }}.zip
        asset_name: ai-text-proofreader-v${{ steps.version.outputs.version }}.zip
        asset_content_type: application/zip
        
    - name: Upload checksums to release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/checksums.txt
        asset_name: checksums.txt
        asset_content_type: text/plain
        
    - name: Generate installation instructions
      run: |
        cat > INSTALLATION.md << 'EOF'
        # AI Text Proofreader v${{ steps.version.outputs.version }} - Installation Guide
        
        ## Chrome/Edge Installation (Developer Mode)
        
        1. Download the `ai-text-proofreader-v${{ steps.version.outputs.version }}.zip` file
        2. Extract the ZIP file to a folder on your computer
        3. Open Chrome/Edge and go to `chrome://extensions/` or `edge://extensions/`
        4. Enable "Developer mode" (toggle in top-right corner)
        5. Click "Load unpacked" and select the extracted folder
        6. The extension should now appear in your extensions list
        
        ## Features
        
        - 🤖 AI-powered text proofreading and correction
        - 🎯 Context-aware suggestions (Email, GitHub, etc.)
        - 🔧 Customizable settings and prompts
        - 🌐 Support for local (Ollama) and cloud (OpenAI) LLMs
        - 📝 Preserves formatting (newlines, bullets, code blocks)
        
        ## Configuration
        
        1. Click the extension icon in your browser toolbar
        2. Go to Settings tab to configure your AI provider
        3. Go to Context tab to customize website categories and prompts
        
        ## Supported AI Providers
        
        - **Ollama (Local)**: Run AI models locally for privacy
        - **OpenAI**: Use GPT models via API key
        - **Custom Endpoint**: Connect to your own AI service
        
        ## Verification
        
        **SHA256 Checksum**: See checksums.txt file
        
        Verify the download integrity by checking the SHA256 hash matches the provided checksum.
        
        ---
        
        **Support**: For issues or questions, please visit the GitHub repository.
        EOF
        
    - name: Upload installation instructions
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: INSTALLATION.md
        asset_name: INSTALLATION.md
        asset_content_type: text/markdown
